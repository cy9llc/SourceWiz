[{"/Users/anishgorakavi/Desktop/sourcewiz/src/index.js":"1","/Users/anishgorakavi/Desktop/sourcewiz/src/navbar.js":"2","/Users/anishgorakavi/Desktop/sourcewiz/src/reportWebVitals.js":"3","/Users/anishgorakavi/Desktop/sourcewiz/src/linki.js":"4","/Users/anishgorakavi/Desktop/sourcewiz/src/404.js":"5","/Users/anishgorakavi/Desktop/sourcewiz/src/copyright.js":"6"},{"size":981,"mtime":1654054135553,"results":"7","hashOfConfig":"8"},{"size":770,"mtime":1654233574716,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1654019332818,"results":"10","hashOfConfig":"8"},{"size":3039,"mtime":1654273791307,"results":"11","hashOfConfig":"8"},{"size":997,"mtime":1654054214237,"results":"12","hashOfConfig":"8"},{"size":212,"mtime":1654273381625,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"kfgob6",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/anishgorakavi/Desktop/sourcewiz/src/index.js",[],[],[],"/Users/anishgorakavi/Desktop/sourcewiz/src/navbar.js",["36","37","38","39","40","41"],[],"import { AppBar, Toolbar } from \"@mui/material\";\nimport React from \"react\";\nimport Typography from '@mui/material/Typography';\nimport { createTheme } from \"@mui/system\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { red } from \"@mui/material/colors\";\nimport { Grid } from \"@mui/material\";\nimport \"./index.css\"\nconst themer = createTheme ({\n    palette: {\n        primary: {\n            main:'#ec2427'\n        },\n        secondary: {\n            main:'#000000'\n        }\n    }\n})\nexport default function Headbar() {\n    return (\n    \n    <AppBar style={{backgroundColor:'#FFFFFF'}}>\n        <Toolbar varient=\"dense\">\n        \n        <img src=\"/cy9.png\" width=\"140\"/>\n        <h1>&nbsp; &nbsp;</h1> \n        \n        </Toolbar>\n    </AppBar>\n    \n    )\n}",[],"/Users/anishgorakavi/Desktop/sourcewiz/src/reportWebVitals.js",[],[],"/Users/anishgorakavi/Desktop/sourcewiz/src/linki.js",["42","43","44","45","46","47","48","49","50","51"],[],"import { Button, Checkbox, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, InputLabel, RadioGroup, TextField,Select, MenuItem, Grid,Box} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Radio from '@mui/material/Radio';\nimport { Dialog } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Linki() {\n    \n    const [quary,setQuary] = useState('')\n    const [sof,setSOF] = useState(false)\n    const [github,setGit] = useState(false)\n    const [linki,setLinki] = useState(false)\n    const [country,setCountry] = useState('')\n\n    function ctry(word) {\n        setCountry(word)\n        console.log(word)\n    }\n    function submit_handler() {\n        console.log(linki)\n        console.log(github)\n        console.log(sof)\n        if(linki) {\n        if (country == \"USA\")\n            window.open(`https://www.google.com/search?q=\"${quary}\" \"USA\" -intitle:\"profiles\" -inurl:\"dir/ \" site:www.linkedin.com/in/ OR site:www.linkedin.com/pub/ bachelor OR degree OR licence`)\n        else\n            window.open(`https://www.google.com/search?q=\"${quary}\" \"India\" -intitle:\"profiles\" -inurl:\"dir/ \" site:in.linkedin.com/in/ OR site:in.linkedin.com/pub/ bachelor OR degree OR licence`)\n        }\n        if (github)\n            window.open(`https://github.com/search?&q=${quary}&type=Users`)\n        if (sof)\n            window.open(`https://www.google.com/search?q=site:stackoverflow.com/users -\"Keeping a low profile.\" \"${quary}\" \"${country}\"`)\n        }\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          \n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>              \n    <br/>\n    <br/>\n    <br/>\n    \n           <FormControl variant=\"standard\">\n           <Box\n      sx={{\n        width: 300,\n        maxWidth: '100%',\n      }}\n    >\n           <TextField fullWidth required label=\"Search for candidates?\" variant=\"standard\" onChange={(event) => setQuary(event.target.value)}/></Box>\n           <br/>\n           <h4>Websites:</h4>\n  \n  <FormControlLabel label=\"Stack Overflow\" control={<Checkbox checked={sof} onChange={(event) => setSOF(event.target.checked)}/>}/>\n  <FormControlLabel label=\"Github\" control={<Checkbox checked={github} onChange={(event) => setGit(event.target.checked)}/>}/>\n  <FormControlLabel label=\"Linkedin\" control={<Checkbox checked={linki} onChange={(event) => setLinki(event.target.checked)}/>}/>\n  <h3>Country?:</h3>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={country}\n          onChange={(event) => ctry(event.target.value)}\n          \n        >\n          <MenuItem value=\"India\">ðŸ‡®ðŸ‡³ India</MenuItem>\n          <MenuItem value=\"USA\">ðŸ‡ºðŸ‡¸ United States</MenuItem>\n          \n        </Select>\n<br/>\n  <Button variant=\"contained\" sx={{backgroundColor:\"#000000\"}} onClick={() => submit_handler()}>Submit!</Button>\n</FormControl>\n\n   \n        </Grid>\n    )\n}","/Users/anishgorakavi/Desktop/sourcewiz/src/404.js",[],[],"/Users/anishgorakavi/Desktop/sourcewiz/src/copyright.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":18},{"ruleId":"52","severity":1,"message":"56","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":23},{"ruleId":"52","severity":1,"message":"57","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":13},{"ruleId":"52","severity":1,"message":"58","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":14},{"ruleId":"52","severity":1,"message":"59","line":9,"column":7,"nodeType":"54","messageId":"55","endLine":9,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":25,"column":9,"nodeType":"62","endLine":25,"endColumn":42},{"ruleId":"52","severity":1,"message":"63","line":1,"column":28,"nodeType":"54","messageId":"55","endLine":1,"endColumn":41},{"ruleId":"52","severity":1,"message":"64","line":1,"column":43,"nodeType":"54","messageId":"55","endLine":1,"endColumn":56},{"ruleId":"52","severity":1,"message":"65","line":1,"column":58,"nodeType":"54","messageId":"55","endLine":1,"endColumn":75},{"ruleId":"52","severity":1,"message":"66","line":1,"column":77,"nodeType":"54","messageId":"55","endLine":1,"endColumn":88},{"ruleId":"52","severity":1,"message":"67","line":1,"column":121,"nodeType":"54","messageId":"55","endLine":1,"endColumn":131},{"ruleId":"52","severity":1,"message":"68","line":1,"column":133,"nodeType":"54","messageId":"55","endLine":1,"endColumn":143},{"ruleId":"52","severity":1,"message":"69","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"70","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"52","severity":1,"message":"71","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":24,"column":21,"nodeType":"74","messageId":"75","endLine":24,"endColumn":23},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'red' is defined but never used.","'Grid' is defined but never used.","'themer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'InputLabel' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Dialog' is defined but never used.","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]