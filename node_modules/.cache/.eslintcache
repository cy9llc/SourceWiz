[{"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/index.js":"1","/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/404.js":"2","/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/reportWebVitals.js":"3","/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/copyright.js":"4","/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/navbar.js":"5","/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/linki.js":"6"},{"size":767,"mtime":1655410703200,"results":"7","hashOfConfig":"8"},{"size":997,"mtime":1654054214237,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1654019332818,"results":"10","hashOfConfig":"8"},{"size":212,"mtime":1654273381625,"results":"11","hashOfConfig":"8"},{"size":780,"mtime":1655410703201,"results":"12","hashOfConfig":"8"},{"size":6573,"mtime":1655436076262,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7l33yz",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/index.js",["33","34","35","36","37"],[],"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/404.js",[],[],"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/reportWebVitals.js",[],[],"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/copyright.js",[],[],"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/navbar.js",["38","39","40","41","42","43"],[],"/Users/anishgorakavi/Desktop/SourceWiz-deploy/src/linki.js",["44","45","46","47","48","49","50","51","52","53","54","55"],[],"import { Button, Checkbox, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, InputLabel, RadioGroup, TextField,Select, MenuItem, Grid,Box} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Radio from '@mui/material/Radio';\nimport { Dialog } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Linki() {\n    \n    const [quary,setQuary] = useState('')\n    const [sof,setSOF] = useState(false)\n    const [github,setGit] = useState(false)\n    const [linki,setLinki] = useState(false)\n    const [country,setCountry] = useState('')\n    const [state,setState] = useState('')\n    \n    const [statelist,setStatelist] = useState([])\n\n    function ctry(word) {\n      setState('')\n      setStatelist([])\n        setCountry(word)\n        console.log(word)\n        const US_states = {\n          \"AL\": \"Alabama\",\n          \"AK\": \"Alaska\",\n          \"AZ\": \"Arizona\",\n          \"AR\": \"Arkansas\",\n          \"CA\": \"California\",\n          \"CO\": \"Colorado\",\n          \"CT\": \"Connecticut\",\n          \"DE\": \"Delaware\",\n          \"FL\": \"Florida\",\n          \"GA\": \"Georgia\",\n          \"HI\": \"Hawaii\",\n          \"ID\": \"Idaho\",\n          \"IL\": \"Illinois\",\n          \"IN\": \"Indiana\",\n          \"IA\": \"Iowa\",\n          \"KS\": \"Kansas\",\n          \"KY\": \"Kentucky\",\n          \"LA\": \"Louisiana\",\n          \"ME\": \"Maine\",\n          \"MD\": \"Maryland\",\n          \"MA\": \"Massachusetts\",\n          \"MI\": \"Michigan\",\n          \"MN\": \"Minnesota\",\n          \"MS\": \"Mississippi\",\n          \"MO\": \"Missouri\",\n          \"MT\": \"Montana\",\n          \"NE\": \"Nebraska\",\n          \"NV\": \"Nevada\",\n          \"NH\": \"New Hampshire\",\n          \"NJ\": \"New Jersey\",\n          \"NM\": \"New Mexico\",\n          \"NY\": \"New York\",\n          \"NC\": \"North Carolina\",\n          \"ND\": \"North Dakota\",\n          \"OH\": \"Ohio\",\n          \"OK\": \"Oklahoma\",\n          \"OR\": \"Oregon\",\n          \"PA\": \"Pennsylvania\",\n          \"RI\": \"Rhode Island\",\n          \"SC\": \"South Carolina\",\n          \"SD\": \"South Dakota\",\n          \"TN\": \"Tennessee\",\n          \"TX\": \"Texas\",\n          \"UT\": \"Utah\",\n          \"VT\": \"Vermont\",\n          \"VA\": \"Virginia\",\n          \"WA\": \"Washington\",\n          \"WV\": \"West Virginia\",\n          \"WI\": \"Wisconsin\",\n          \"WY\": \"Wyoming\"\n        }\n    \n        const indian_states = {\n          \"AN\":\"Andaman and Nicobar Islands\",\n          \"AP\":\"Andhra Pradesh\",\n          \"AR\":\"Arunachal Pradesh\",\n          \"AS\":\"Assam\",\n          \"BR\":\"Bihar\",\n          \"CG\":\"Chandigarh\",\n          \"CH\":\"Chhattisgarh\",\n          \"DN\":\"Dadra and Nagar Haveli\",\n          \"DD\":\"Daman and Diu\",\n          \"DL\":\"Delhi\",\n          \"GA\":\"Goa\",\n          \"GJ\":\"Gujarat\",\n          \"HR\":\"Haryana\",\n          \"HP\":\"Himachal Pradesh\",\n          \"JK\":\"Jammu and Kashmir\",\n          \"JH\":\"Jharkhand\",\n          \"KA\":\"Karnataka\",\n          \"KL\":\"Kerala\",\n          \"LA\":\"Ladakh\",\n          \"LD\":\"Lakshadweep\",\n          \"MP\":\"Madhya Pradesh\",\n          \"MH\":\"Maharashtra\",\n          \"MN\":\"Manipur\",\n          \"ML\":\"Meghalaya\",\n          \"MZ\":\"Mizoram\",\n          \"NL\":\"Nagaland\",\n          \"OR\":\"Odisha\",\n          \"PY\":\"Puducherry\",\n          \"PB\":\"Punjab\",\n          \"RJ\":\"Rajasthan\",\n          \"SK\":\"Sikkim\",\n          \"TN\":\"Tamil Nadu\",\n          \"TS\":\"Telangana\",\n          \"TR\":\"Tripura\",\n          \"UP\":\"Uttar Pradesh\",\n          \"UK\":\"Uttarakhand\",\n          \"WB\":\"West Bengal\"\n      }\n      const statel = []\n      if (word == \"USA\") {\n        console.log(\"US!\")\n      for (const usstate in US_states) {\n        statel.push(<MenuItem value={US_states[usstate]}> <img src=\"/SourceWiz/usa.png\" height={16} width={16}/>&nbsp;{US_states[usstate]},USA</MenuItem>)\n      }\n      }\n      else\n      {\n      for  (const instate in indian_states) {\n        statel.push(<MenuItem value={indian_states[instate]}>  <img src=\"/SourceWiz/india.png\" height={16} width={16}/>&nbsp;{indian_states[instate]},India</MenuItem>)}\n      \n      }\n      setStatelist(statel)\n    }\n    \n\n    \n    function submit_handler() {\n      \n        console.log(linki)\n        console.log(github)\n        console.log(sof)\n        if(linki) {\n        if (country === \"USA\")\n            window.open(`https://www.google.com/search?q=\"${quary}\" ${state} -intitle:\"profiles\" -inurl:\"dir/ \" site:www.linkedin.com/in/ OR site:www.linkedin.com/pub/ bachelor OR degree OR licence`)\n        else\n            window.open(`https://www.google.com/search?q=\"${quary}\" ${state} -intitle:\"profiles\" -inurl:\"dir/ \" site:in.linkedin.com/in/ OR site:in.linkedin.com/pub/ bachelor OR degree OR licence`)\n        }\n        if (github)\n            window.open(`https://github.com/search?&q=${quary} location:\"${state},USA\"&type=Users`)\n        if (sof)\n            window.open(`https://www.google.com/search?q=site:stackoverflow.com/users -\"Keeping a low profile.\" \"${quary}\" \"${country},USA\"`)\n        }\n        \n    \n\n   \n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          \n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>              \n    <br/>\n    <br/>\n    <br/>\n    \n           <FormControl variant=\"standard\">\n           <Box\n      sx={{\n        width: 300,\n        maxWidth: '100%',\n      }}\n    >\n           <TextField fullWidth required label=\"Search for candidates?\" variant=\"standard\" onChange={(event) => setQuary(event.target.value)}/></Box>\n           <br/>\n           <h4>Websites:</h4>\n  \n  <FormControlLabel label=\"Stack Overflow\" control={<Checkbox checked={sof} onChange={(event) => setSOF(event.target.checked)}/>}/>\n  <FormControlLabel label=\"Github\" control={<Checkbox checked={github} onChange={(event) => setGit(event.target.checked)}/>}/>\n  <FormControlLabel label=\"Linkedin\" control={<Checkbox checked={linki} onChange={(event) => setLinki(event.target.checked)}/>}/>\n  <h3>Country?:</h3>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={country}\n          onChange={(event) => ctry(event.target.value)}\n          \n        >\n          <MenuItem value=\"USA\">USA</MenuItem>\n          <MenuItem value=\"India\">India</MenuItem>\n        </Select>\n<br/>\n<h3>State?:</h3>\n <Select\n          labelId=\"state\"\n          id=\"state\"\n          value={state}\n          onChange={(event) => setState(event.target.value)}\n          \n        >\n        {statelist}\n        </Select>\n  <Button variant=\"contained\" sx={{backgroundColor:\"#000000\"}} onClick={() => submit_handler()}>Submit!</Button>\n</FormControl>\n\n   \n        </Grid>\n    )\n}",{"ruleId":"56","severity":1,"message":"57","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":13},{"ruleId":"56","severity":1,"message":"60","line":8,"column":27,"nodeType":"58","messageId":"59","endLine":8,"endColumn":33},{"ruleId":"56","severity":1,"message":"61","line":8,"column":34,"nodeType":"58","messageId":"59","endLine":8,"endColumn":40},{"ruleId":"56","severity":1,"message":"62","line":8,"column":41,"nodeType":"58","messageId":"59","endLine":8,"endColumn":46},{"ruleId":"56","severity":1,"message":"63","line":8,"column":48,"nodeType":"58","messageId":"59","endLine":8,"endColumn":56},{"ruleId":"56","severity":1,"message":"64","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":18},{"ruleId":"56","severity":1,"message":"65","line":5,"column":10,"nodeType":"58","messageId":"59","endLine":5,"endColumn":23},{"ruleId":"56","severity":1,"message":"66","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":13},{"ruleId":"56","severity":1,"message":"67","line":7,"column":10,"nodeType":"58","messageId":"59","endLine":7,"endColumn":14},{"ruleId":"56","severity":1,"message":"68","line":9,"column":7,"nodeType":"58","messageId":"59","endLine":9,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":25,"column":9,"nodeType":"71","endLine":25,"endColumn":52},{"ruleId":"56","severity":1,"message":"72","line":1,"column":28,"nodeType":"58","messageId":"59","endLine":1,"endColumn":41},{"ruleId":"56","severity":1,"message":"73","line":1,"column":43,"nodeType":"58","messageId":"59","endLine":1,"endColumn":56},{"ruleId":"56","severity":1,"message":"74","line":1,"column":58,"nodeType":"58","messageId":"59","endLine":1,"endColumn":75},{"ruleId":"56","severity":1,"message":"75","line":1,"column":77,"nodeType":"58","messageId":"59","endLine":1,"endColumn":88},{"ruleId":"56","severity":1,"message":"76","line":1,"column":121,"nodeType":"58","messageId":"59","endLine":1,"endColumn":131},{"ruleId":"56","severity":1,"message":"77","line":1,"column":133,"nodeType":"58","messageId":"59","endLine":1,"endColumn":143},{"ruleId":"56","severity":1,"message":"78","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":13},{"ruleId":"56","severity":1,"message":"79","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":16},{"ruleId":"56","severity":1,"message":"80","line":5,"column":10,"nodeType":"58","messageId":"59","endLine":5,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":116,"column":16,"nodeType":"83","messageId":"84","endLine":116,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":119,"column":59,"nodeType":"71","endLine":119,"endColumn":113},{"ruleId":"69","severity":1,"message":"70","line":125,"column":64,"nodeType":"71","endLine":125,"endColumn":120},"no-unused-vars","'Error' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Navigate' is defined but never used.","'Typography' is defined but never used.","'ThemeProvider' is defined but never used.","'red' is defined but never used.","'Grid' is defined but never used.","'themer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'InputLabel' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Dialog' is defined but never used.","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]